name: build with github packages

on:
  pull_request: {}
  workflow_dispatch: {}
  push:
    branches:
      - 'main'
    tags-ignore:
      - '**'

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  zig:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mlugg/setup-zig@v2
        with:
          version: 0.14.0

      - run: zig build -p src/jvmMain/resources/jni
        working-directory: zipline

      - uses: actions/upload-artifact@v4
        with:
          name: jni-binaries
          path: zipline/src/jvmMain/resources/jni
          if-no-files-found: error

  platform-tests:
    needs:
      - zig
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: macos-13
            task: macosX64Test
          - os: macos-latest
            task: macosArm64Test
          - os: ubuntu-latest
            task: linuxX64Test

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - uses: actions/download-artifact@v4
        with:
          name: jni-binaries
          path: zipline/src/jvmMain/resources/jni

      - run: ./gradlew jvmTest ${{ matrix.platform.task }} apiCheck --stacktrace

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-report-${{ matrix.platform.os }}
          path: '**/build/reports/tests/**'
          retention-days: 1

  samples:
    runs-on: macos-latest
    needs:
      - zig

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - uses: actions/download-artifact@v4
        with:
          name: jni-binaries
          path: zipline/src/jvmMain/resources/jni

      - run: ./gradlew -p samples check --stacktrace

  android-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - run: ./gradlew assembleAndroidTest

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          emulator-boot-timeout: 20000
          script: ./gradlew connectedCheck

  ios-app:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - name: Build Xcode samples
        run: |
          cd samples/world-clock/ios/app
          pod install
          xcodebuild -workspace WorldClock.xcworkspace -scheme WorldClock -destination 'platform=iOS Simulator,name=iPhone 13,OS=latest'

  build:
    runs-on: macos-latest
    needs:
      - platform-tests
      - samples
      - android-tests
      - ios-app

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - uses: actions/download-artifact@v4
        with:
          name: jni-binaries
          path: zipline/src/jvmMain/resources/jni

      - run: ./gradlew assemble :dokkaHtmlMultiModule

      - uses: actions/upload-artifact@v4
        with:
          name: zipline-jvm.jar
          path: zipline/build/libs/zipline-jvm-*.jar
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: zipline-android.aar
          path: zipline/build/outputs/aar/*-release.aar
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: zipline-cli.zip
          path: zipline-cli/build/distributions/zipline-cli-*.zip
          if-no-files-found: error

      # Publishing to GitHub Packages instead of Maven Central
      - run: ./gradlew publishAllPublicationsToGitHubPackagesRepository
        if: ${{ github.ref == 'refs/heads/main' && github.repository == 'tatsuya25/zipline-cashapp' }}
        env:
          ORG_GRADLE_PROJECT_githubPackagesUsername: ${{ github.actor }}
          ORG_GRADLE_PROJECT_githubPackagesPassword: ${{ secrets.PACKAGES_PASSWORD }}